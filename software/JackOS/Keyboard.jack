// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {} 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char c;
        let c = Memory.peek(24576); // gets the value (as a char) at the keyboard memory address

        if(~(c = 0)) {
            return c;
        } else {
            return 0;
        }
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        // display the cursor?
        var char c;
        var char keyPressed;
        let c = Keyboard.keyPressed();

        while(c = 0) {
            let c = Keyboard.keyPressed(); // wait until user presses a key
        }
        let keyPressed = c; // saves the key that was pressed

        while(~(c = 0)) {
            let c = Keyboard.keyPressed(); // wait until user lets go of the key
        }

        do Output.printChar(keyPressed); // prints char and resets cursor
        return keyPressed;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var String s;
        var char c;
        let s = String.new(length);

        do Output.printString(message); // prints the message on the screen

        while(true) { // reads until the newline character is pressed
            let c = Keyboard.readChar();
            if(c = 128) { // checks if newline char
                do Output.println(); // advances to the next line
                return s;
            }
            if(c = 129) { // checks if backspace char
                do s.eraseLastChar(); // removes the last character from the string
                do Output.backSpace(); // moves the cursor back 1 position
            } else {
                let s = s.appendChar(c); // adds the character to the string
            }
        }
        return s;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String s;

        let s = Keyboard.readLine(message);
        return s.intValue(); // returns the integer value of the string
    }
}
